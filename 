[1mdiff --git a/jiu-sys-monitor-dubbo.zip b/jiu-sys-monitor-dubbo.zip[m
[1mnew file mode 100755[m
[1mindex 0000000..8e6556b[m
Binary files /dev/null and b/jiu-sys-monitor-dubbo.zip differ
[1mdiff --git a/jiu-sys-monitor-dubbo/.idea/.gitignore b/jiu-sys-monitor-dubbo/.idea/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..35410ca[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/.idea/.gitignore[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m# 默认忽略的文件[m
[32m+[m[32m/shelf/[m
[32m+[m[32m/workspace.xml[m
[32m+[m[32m# 基于编辑器的 HTTP 客户端请求[m
[32m+[m[32m/httpRequests/[m
[32m+[m[32m# Datasource local storage ignored files[m
[32m+[m[32m/dataSources/[m
[32m+[m[32m/dataSources.local.xml[m
[1mdiff --git a/jiu-sys-monitor-dubbo/.idea/compiler.xml b/jiu-sys-monitor-dubbo/.idea/compiler.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..37b97d1[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/.idea/compiler.xml[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="CompilerConfiguration">[m
[32m+[m[32m    <annotationProcessing>[m
[32m+[m[32m      <profile name="Maven default annotation processors profile" enabled="true">[m
[32m+[m[32m        <sourceOutputDir name="target/generated-sources/annotations" />[m
[32m+[m[32m        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />[m
[32m+[m[32m        <outputRelativeToContentRoot value="true" />[m
[32m+[m[32m        <module name="sys-monitor" />[m
[32m+[m[32m      </profile>[m
[32m+[m[32m    </annotationProcessing>[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/jiu-sys-monitor-dubbo/.idea/encodings.xml b/jiu-sys-monitor-dubbo/.idea/encodings.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..9b7159a[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/.idea/encodings.xml[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="Encoding">[m
[32m+[m[32m    <file url="file://$PROJECT_DIR$/sys-monitor/src/main/java" charset="UTF-8" />[m
[32m+[m[32m    <file url="file://$PROJECT_DIR$/sys-monitor/src/main/resources" charset="UTF-8" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/jiu-sys-monitor-dubbo/.idea/jarRepositories.xml b/jiu-sys-monitor-dubbo/.idea/jarRepositories.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..712ab9d[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/.idea/jarRepositories.xml[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="RemoteRepositoriesConfiguration">[m
[32m+[m[32m    <remote-repository>[m
[32m+[m[32m      <option name="id" value="central" />[m
[32m+[m[32m      <option name="name" value="Central Repository" />[m
[32m+[m[32m      <option name="url" value="https://repo.maven.apache.org/maven2" />[m
[32m+[m[32m    </remote-repository>[m
[32m+[m[32m    <remote-repository>[m
[32m+[m[32m      <option name="id" value="central" />[m
[32m+[m[32m      <option name="name" value="Maven Central repository" />[m
[32m+[m[32m      <option name="url" value="https://repo1.maven.org/maven2" />[m
[32m+[m[32m    </remote-repository>[m
[32m+[m[32m    <remote-repository>[m
[32m+[m[32m      <option name="id" value="jboss.community" />[m
[32m+[m[32m      <option name="name" value="JBoss Community repository" />[m
[32m+[m[32m      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />[m
[32m+[m[32m    </remote-repository>[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/jiu-sys-monitor-dubbo/.idea/jiu-sys-monitor-dubbo.iml b/jiu-sys-monitor-dubbo/.idea/jiu-sys-monitor-dubbo.iml[m
[1mnew file mode 100644[m
[1mindex 0000000..d6ebd48[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/.idea/jiu-sys-monitor-dubbo.iml[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<module type="JAVA_MODULE" version="4">[m
[32m+[m[32m  <component name="NewModuleRootManager" inherit-compiler-output="true">[m
[32m+[m[32m    <exclude-output />[m
[32m+[m[32m    <content url="file://$MODULE_DIR$" />[m
[32m+[m[32m    <orderEntry type="inheritedJdk" />[m
[32m+[m[32m    <orderEntry type="sourceFolder" forTests="false" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</module>[m
\ No newline at end of file[m
[1mdiff --git a/jiu-sys-monitor-dubbo/.idea/misc.xml b/jiu-sys-monitor-dubbo/.idea/misc.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..fdef795[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/.idea/misc.xml[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="ExternalStorageConfigurationManager" enabled="true" />[m
[32m+[m[32m  <component name="MavenProjectsManager">[m
[32m+[m[32m    <option name="originalFiles">[m
[32m+[m[32m      <list>[m
[32m+[m[32m        <option value="$PROJECT_DIR$/sys-monitor/pom.xml" />[m
[32m+[m[32m      </list>[m
[32m+[m[32m    </option>[m
[32m+[m[32m  </component>[m
[32m+[m[32m  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="corretto-21" project-jdk-type="JavaSDK">[m
[32m+[m[32m    <output url="file://$PROJECT_DIR$/out" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/jiu-sys-monitor-dubbo/.idea/modules.xml b/jiu-sys-monitor-dubbo/.idea/modules.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..03db886[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/.idea/modules.xml[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="ProjectModuleManager">[m
[32m+[m[32m    <modules>[m
[32m+[m[32m      <module fileurl="file://$PROJECT_DIR$/.idea/jiu-sys-monitor-dubbo.iml" filepath="$PROJECT_DIR$/.idea/jiu-sys-monitor-dubbo.iml" />[m
[32m+[m[32m    </modules>[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/jiu-sys-monitor-dubbo/.idea/vcs.xml b/jiu-sys-monitor-dubbo/.idea/vcs.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..6c0b863[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/.idea/vcs.xml[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project version="4">[m
[32m+[m[32m  <component name="VcsDirectoryMappings">[m
[32m+[m[32m    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />[m
[32m+[m[32m  </component>[m
[32m+[m[32m</project>[m
\ No newline at end of file[m
[1mdiff --git a/jiu-sys-monitor-dubbo/shell.sh b/jiu-sys-monitor-dubbo/shell.sh[m
[1mnew file mode 100644[m
[1mindex 0000000..124bdc8[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/shell.sh[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mdocker run --name zookeeper -d --restart=always -p 2181:2181 -v /home/jiuth/1-Code/ZookeeperData:/data -v /home/jiuth/1-Code/ZookeeperLogs:/datalog zookeeper[m
\ No newline at end of file[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/.gitignore b/jiu-sys-monitor-dubbo/sys-monitor/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..549e00a[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/.gitignore[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mHELP.md[m
[32m+[m[32mtarget/[m
[32m+[m[32m!.mvn/wrapper/maven-wrapper.jar[m
[32m+[m[32m!**/src/main/**/target/[m
[32m+[m[32m!**/src/test/**/target/[m
[32m+[m
[32m+[m[32m### STS ###[m
[32m+[m[32m.apt_generated[m
[32m+[m[32m.classpath[m
[32m+[m[32m.factorypath[m
[32m+[m[32m.project[m
[32m+[m[32m.settings[m
[32m+[m[32m.springBeans[m
[32m+[m[32m.sts4-cache[m
[32m+[m
[32m+[m[32m### IntelliJ IDEA ###[m
[32m+[m[32m.idea[m
[32m+[m[32m*.iws[m
[32m+[m[32m*.iml[m
[32m+[m[32m*.ipr[m
[32m+[m
[32m+[m[32m### NetBeans ###[m
[32m+[m[32m/nbproject/private/[m
[32m+[m[32m/nbbuild/[m
[32m+[m[32m/dist/[m
[32m+[m[32m/nbdist/[m
[32m+[m[32m/.nb-gradle/[m
[32m+[m[32mbuild/[m
[32m+[m[32m!**/src/main/**/build/[m
[32m+[m[32m!**/src/test/**/build/[m
[32m+[m
[32m+[m[32m### VS Code ###[m
[32m+[m[32m.vscode/[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/.mvn/wrapper/maven-wrapper.jar b/jiu-sys-monitor-dubbo/sys-monitor/.mvn/wrapper/maven-wrapper.jar[m
[1mnew file mode 100644[m
[1mindex 0000000..cb28b0e[m
Binary files /dev/null and b/jiu-sys-monitor-dubbo/sys-monitor/.mvn/wrapper/maven-wrapper.jar differ
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/.mvn/wrapper/maven-wrapper.properties b/jiu-sys-monitor-dubbo/sys-monitor/.mvn/wrapper/maven-wrapper.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..2e76e18[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/.mvn/wrapper/maven-wrapper.properties[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32mdistributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.4/apache-maven-3.9.4-bin.zip[m
[32m+[m[32mwrapperUrl=https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/Dockerfile b/jiu-sys-monitor-dubbo/sys-monitor/Dockerfile[m
[1mnew file mode 100644[m
[1mindex 0000000..d68a30d[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/Dockerfile[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m# This is the demo Dockerfile for the generated template project, please change accordingly before building image from it.[m
[32m+[m[32m# Run the following command to build image: docker build -f ./Dockerfile --build-arg APP_FILE=demo-0.0.1-SNAPSHOT.jar -t demo:latest .[m
[32m+[m[32mFROM openjdk:17-jdk-alpine[m
[32m+[m
[32m+[m[32m# Set the working directory to /build[m
[32m+[m[32mWORKDIR /build[m
[32m+[m[32mCOPY . /build[m
[32m+[m
[32m+[m[32mRUN chmod +x ./mvnw[m
[32m+[m[32mRUN ./mvnw clean package -U[m
[32m+[m
[32m+[m[32m# JAR file will be specified by passing in a build time argument to docker build[m
[32m+[m[32mARG APP_FILE[m
[32m+[m
[32m+[m[32m# Remember to change the port according to the RPC protocol you select[m
[32m+[m[32mEXPOSE 50051[m
[32m+[m
[32m+[m[32m# copy the JAR file into the root and rename[m
[32m+[m[32mRUN cp ./target/${APP_FILE} app.jar[m
[32m+[m
[32m+[m[32m# Run java with the jar file when the container starts up[m
[32m+[m[32mCMD ["java","-jar","app.jar"][m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/mvnw b/jiu-sys-monitor-dubbo/sys-monitor/mvnw[m
[1mnew file mode 100644[m
[1mindex 0000000..66df285[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/mvnw[m
[36m@@ -0,0 +1,308 @@[m
[32m+[m[32m#!/bin/sh[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m# or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m# distributed with this work for additional information[m
[32m+[m[32m# regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m# to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m# "License"); you may not use this file except in compliance[m
[32m+[m[32m# with the License.  You may obtain a copy of the License at[m
[32m+[m[32m#[m
[32m+[m[32m#    https://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m# software distributed under the License is distributed on an[m
[32m+[m[32m# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m# KIND, either express or implied.  See the License for the[m
[32m+[m[32m# specific language governing permissions and limitations[m
[32m+[m[32m# under the License.[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m[32m# Apache Maven Wrapper startup batch script, version 3.2.0[m
[32m+[m[32m#[m
[32m+[m[32m# Required ENV vars:[m
[32m+[m[32m# ------------------[m
[32m+[m[32m#   JAVA_HOME - location of a JDK home dir[m
[32m+[m[32m#[m
[32m+[m[32m# Optional ENV vars[m
[32m+[m[32m# -----------------[m
[32m+[m[32m#   MAVEN_OPTS - parameters passed to the Java VM when running Maven[m
[32m+[m[32m#     e.g. to debug Maven itself, use[m
[32m+[m[32m#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000[m
[32m+[m[32m#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files[m
[32m+[m[32m# ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32mif [ -z "$MAVEN_SKIP_RC" ] ; then[m
[32m+[m
[32m+[m[32m  if [ -f /usr/local/etc/mavenrc ] ; then[m
[32m+[m[32m    . /usr/local/etc/mavenrc[m
[32m+[m[32m  fi[m
[32m+[m
[32m+[m[32m  if [ -f /etc/mavenrc ] ; then[m
[32m+[m[32m    . /etc/mavenrc[m
[32m+[m[32m  fi[m
[32m+[m
[32m+[m[32m  if [ -f "$HOME/.mavenrc" ] ; then[m
[32m+[m[32m    . "$HOME/.mavenrc"[m
[32m+[m[32m  fi[m
[32m+[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# OS specific support.  $var _must_ be set to either true or false.[m
[32m+[m[32mcygwin=false;[m
[32m+[m[32mdarwin=false;[m
[32m+[m[32mmingw=false[m
[32m+[m[32mcase "$(uname)" in[m
[32m+[m[32m  CYGWIN*) cygwin=true ;;[m
[32m+[m[32m  MINGW*) mingw=true;;[m
[32m+[m[32m  Darwin*) darwin=true[m
[32m+[m[32m    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home[m
[32m+[m[32m    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html[m
[32m+[m[32m    if [ -z "$JAVA_HOME" ]; then[m
[32m+[m[32m      if [ -x "/usr/libexec/java_home" ]; then[m
[32m+[m[32m        JAVA_HOME="$(/usr/libexec/java_home)"; export JAVA_HOME[m
[32m+[m[32m      else[m
[32m+[m[32m        JAVA_HOME="/Library/Java/Home"; export JAVA_HOME[m
[32m+[m[32m      fi[m
[32m+[m[32m    fi[m
[32m+[m[32m    ;;[m
[32m+[m[32mesac[m
[32m+[m
[32m+[m[32mif [ -z "$JAVA_HOME" ] ; then[m
[32m+[m[32m  if [ -r /etc/gentoo-release ] ; then[m
[32m+[m[32m    JAVA_HOME=$(java-config --jre-home)[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# For Cygwin, ensure paths are in UNIX format before anything is touched[m
[32m+[m[32mif $cygwin ; then[m
[32m+[m[32m  [ -n "$JAVA_HOME" ] &&[m
[32m+[m[32m    JAVA_HOME=$(cygpath --unix "$JAVA_HOME")[m
[32m+[m[32m  [ -n "$CLASSPATH" ] &&[m
[32m+[m[32m    CLASSPATH=$(cygpath --path --unix "$CLASSPATH")[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# For Mingw, ensure paths are in UNIX format before anything is touched[m
[32m+[m[32mif $mingw ; then[m
[32m+[m[32m  [ -n "$JAVA_HOME" ] && [ -d "$JAVA_HOME" ] &&[m
[32m+[m[32m    JAVA_HOME="$(cd "$JAVA_HOME" || (echo "cannot cd into $JAVA_HOME."; exit 1); pwd)"[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mif [ -z "$JAVA_HOME" ]; then[m
[32m+[m[32m  javaExecutable="$(which javac)"[m
[32m+[m[32m  if [ -n "$javaExecutable" ] && ! [ "$(expr "\"$javaExecutable\"" : '\([^ ]*\)')" = "no" ]; then[m
[32m+[m[32m    # readlink(1) is not available as standard on Solaris 10.[m
[32m+[m[32m    readLink=$(which readlink)[m
[32m+[m[32m    if [ ! "$(expr "$readLink" : '\([^ ]*\)')" = "no" ]; then[m
[32m+[m[32m      if $darwin ; then[m
[32m+[m[32m        javaHome="$(dirname "\"$javaExecutable\"")"[m
[32m+[m[32m        javaExecutable="$(cd "\"$javaHome\"" && pwd -P)/javac"[m
[32m+[m[32m      else[m
[32m+[m[32m        javaExecutable="$(readlink -f "\"$javaExecutable\"")"[m
[32m+[m[32m      fi[m
[32m+[m[32m      javaHome="$(dirname "\"$javaExecutable\"")"[m
[32m+[m[32m      javaHome=$(expr "$javaHome" : '\(.*\)/bin')[m
[32m+[m[32m      JAVA_HOME="$javaHome"[m
[32m+[m[32m      export JAVA_HOME[m
[32m+[m[32m    fi[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mif [ -z "$JAVACMD" ] ; then[m
[32m+[m[32m  if [ -n "$JAVA_HOME"  ] ; then[m
[32m+[m[32m    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then[m
[32m+[m[32m      # IBM's JDK on AIX uses strange locations for the executables[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/jre/sh/java"[m
[32m+[m[32m    else[m
[32m+[m[32m      JAVACMD="$JAVA_HOME/bin/java"[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    JAVACMD="$(\unset -f command 2>/dev/null; \command -v java)"[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mif [ ! -x "$JAVACMD" ] ; then[m
[32m+[m[32m  echo "Error: JAVA_HOME is not defined correctly." >&2[m
[32m+[m[32m  echo "  We cannot execute $JAVACMD" >&2[m
[32m+[m[32m  exit 1[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mif [ -z "$JAVA_HOME" ] ; then[m
[32m+[m[32m  echo "Warning: JAVA_HOME environment variable is not set."[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# traverses directory structure from process work directory to filesystem root[m
[32m+[m[32m# first directory with .mvn subdirectory is considered project base directory[m
[32m+[m[32mfind_maven_basedir() {[m
[32m+[m[32m  if [ -z "$1" ][m
[32m+[m[32m  then[m
[32m+[m[32m    echo "Path not specified to find_maven_basedir"[m
[32m+[m[32m    return 1[m
[32m+[m[32m  fi[m
[32m+[m
[32m+[m[32m  basedir="$1"[m
[32m+[m[32m  wdir="$1"[m
[32m+[m[32m  while [ "$wdir" != '/' ] ; do[m
[32m+[m[32m    if [ -d "$wdir"/.mvn ] ; then[m
[32m+[m[32m      basedir=$wdir[m
[32m+[m[32m      break[m
[32m+[m[32m    fi[m
[32m+[m[32m    # workaround for JBEAP-8937 (on Solaris 10/Sparc)[m
[32m+[m[32m    if [ -d "${wdir}" ]; then[m
[32m+[m[32m      wdir=$(cd "$wdir/.." || exit 1; pwd)[m
[32m+[m[32m    fi[m
[32m+[m[32m    # end of workaround[m
[32m+[m[32m  done[m
[32m+[m[32m  printf '%s' "$(cd "$basedir" || exit 1; pwd)"[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m# concatenates all lines of a file[m
[32m+[m[32mconcat_lines() {[m
[32m+[m[32m  if [ -f "$1" ]; then[m
[32m+[m[32m    # Remove \r in case we run on Windows within Git Bash[m
[32m+[m[32m    # and check out the repository with auto CRLF management[m
[32m+[m[32m    # enabled. Otherwise, we may read lines that are delimited with[m
[32m+[m[32m    # \r\n and produce $'-Xarg\r' rather than -Xarg due to word[m
[32m+[m[32m    # splitting rules.[m
[32m+[m[32m    tr -s '\r\n' ' ' < "$1"[m
[32m+[m[32m  fi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mlog() {[m
[32m+[m[32m  if [ "$MVNW_VERBOSE" = true ]; then[m
[32m+[m[32m    printf '%s\n' "$1"[m
[32m+[m[32m  fi[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mBASE_DIR=$(find_maven_basedir "$(dirname "$0")")[m
[32m+[m[32mif [ -z "$BASE_DIR" ]; then[m
[32m+[m[32m  exit 1;[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mMAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}; export MAVEN_PROJECTBASEDIR[m
[32m+[m[32mlog "$MAVEN_PROJECTBASEDIR"[m
[32m+[m
[32m+[m[32m##########################################################################################[m
[32m+[m[32m# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central[m
[32m+[m[32m# This allows using the maven wrapper in projects that prohibit checking in binary data.[m
[32m+[m[32m##########################################################################################[m
[32m+[m[32mwrapperJarPath="$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar"[m
[32m+[m[32mif [ -r "$wrapperJarPath" ]; then[m
[32m+[m[32m    log "Found $wrapperJarPath"[m
[32m+[m[32melse[m
[32m+[m[32m    log "Couldn't find $wrapperJarPath, downloading it ..."[m
[32m+[m
[32m+[m[32m    if [ -n "$MVNW_REPOURL" ]; then[m
[32m+[m[32m      wrapperUrl="$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar"[m
[32m+[m[32m    else[m
[32m+[m[32m      wrapperUrl="https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar"[m
[32m+[m[32m    fi[m
[32m+[m[32m    while IFS="=" read -r key value; do[m
[32m+[m[32m      # Remove '\r' from value to allow usage on windows as IFS does not consider '\r' as a separator ( considers space, tab, new line ('\n'), and custom '=' )[m
[32m+[m[32m      safeValue=$(echo "$value" | tr -d '\r')[m
[32m+[m[32m      case "$key" in (wrapperUrl) wrapperUrl="$safeValue"; break ;;[m
[32m+[m[32m      esac[m
[32m+[m[32m    done < "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32m    log "Downloading from: $wrapperUrl"[m
[32m+[m
[32m+[m[32m    if $cygwin; then[m
[32m+[m[32m      wrapperJarPath=$(cygpath --path --windows "$wrapperJarPath")[m
[32m+[m[32m    fi[m
[32m+[m
[32m+[m[32m    if command -v wget > /dev/null; then[m
[32m+[m[32m        log "Found wget ... using wget"[m
[32m+[m[32m        [ "$MVNW_VERBOSE" = true ] && QUIET="" || QUIET="--quiet"[m
[32m+[m[32m        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then[m
[32m+[m[32m            wget $QUIET "$wrapperUrl" -O "$wrapperJarPath" || rm -f "$wrapperJarPath"[m
[32m+[m[32m        else[m
[32m+[m[32m            wget $QUIET --http-user="$MVNW_USERNAME" --http-password="$MVNW_PASSWORD" "$wrapperUrl" -O "$wrapperJarPath" || rm -f "$wrapperJarPath"[m
[32m+[m[32m        fi[m
[32m+[m[32m    elif command -v curl > /dev/null; then[m
[32m+[m[32m        log "Found curl ... using curl"[m
[32m+[m[32m        [ "$MVNW_VERBOSE" = true ] && QUIET="" || QUIET="--silent"[m
[32m+[m[32m        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then[m
[32m+[m[32m            curl $QUIET -o "$wrapperJarPath" "$wrapperUrl" -f -L || rm -f "$wrapperJarPath"[m
[32m+[m[32m        else[m
[32m+[m[32m            curl $QUIET --user "$MVNW_USERNAME:$MVNW_PASSWORD" -o "$wrapperJarPath" "$wrapperUrl" -f -L || rm -f "$wrapperJarPath"[m
[32m+[m[32m        fi[m
[32m+[m[32m    else[m
[32m+[m[32m        log "Falling back to using Java to download"[m
[32m+[m[32m        javaSource="$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.java"[m
[32m+[m[32m        javaClass="$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.class"[m
[32m+[m[32m        # For Cygwin, switch paths to Windows format before running javac[m
[32m+[m[32m        if $cygwin; then[m
[32m+[m[32m          javaSource=$(cygpath --path --windows "$javaSource")[m
[32m+[m[32m          javaClass=$(cygpath --path --windows "$javaClass")[m
[32m+[m[32m        fi[m
[32m+[m[32m        if [ -e "$javaSource" ]; then[m
[32m+[m[32m            if [ ! -e "$javaClass" ]; then[m
[32m+[m[32m                log " - Compiling MavenWrapperDownloader.java ..."[m
[32m+[m[32m                ("$JAVA_HOME/bin/javac" "$javaSource")[m
[32m+[m[32m            fi[m
[32m+[m[32m            if [ -e "$javaClass" ]; then[m
[32m+[m[32m                log " - Running MavenWrapperDownloader.java ..."[m
[32m+[m[32m                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$wrapperUrl" "$wrapperJarPath") || rm -f "$wrapperJarPath"[m
[32m+[m[32m            fi[m
[32m+[m[32m        fi[m
[32m+[m[32m    fi[m
[32m+[m[32mfi[m
[32m+[m[32m##########################################################################################[m
[32m+[m[32m# End of extension[m
[32m+[m[32m##########################################################################################[m
[32m+[m
[32m+[m[32m# If specified, validate the SHA-256 sum of the Maven wrapper jar file[m
[32m+[m[32mwrapperSha256Sum=""[m
[32m+[m[32mwhile IFS="=" read -r key value; do[m
[32m+[m[32m  case "$key" in (wrapperSha256Sum) wrapperSha256Sum=$value; break ;;[m
[32m+[m[32m  esac[m
[32m+[m[32mdone < "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties"[m
[32m+[m[32mif [ -n "$wrapperSha256Sum" ]; then[m
[32m+[m[32m  wrapperSha256Result=false[m
[32m+[m[32m  if command -v sha256sum > /dev/null; then[m
[32m+[m[32m    if echo "$wrapperSha256Sum  $wrapperJarPath" | sha256sum -c > /dev/null 2>&1; then[m
[32m+[m[32m      wrapperSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  elif command -v shasum > /dev/null; then[m
[32m+[m[32m    if echo "$wrapperSha256Sum  $wrapperJarPath" | shasum -a 256 -c > /dev/null 2>&1; then[m
[32m+[m[32m      wrapperSha256Result=true[m
[32m+[m[32m    fi[m
[32m+[m[32m  else[m
[32m+[m[32m    echo "Checksum validation was requested but neither 'sha256sum' or 'shasum' are available."[m
[32m+[m[32m    echo "Please install either command, or disable validation by removing 'wrapperSha256Sum' from your maven-wrapper.properties."[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32m  if [ $wrapperSha256Result = false ]; then[m
[32m+[m[32m    echo "Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised." >&2[m
[32m+[m[32m    echo "Investigate or delete $wrapperJarPath to attempt a clean download." >&2[m
[32m+[m[32m    echo "If you updated your Maven version, you need to update the specified wrapperSha256Sum property." >&2[m
[32m+[m[32m    exit 1[m
[32m+[m[32m  fi[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32mMAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"[m
[32m+[m
[32m+[m[32m# For Cygwin, switch paths to Windows format before running java[m
[32m+[m[32mif $cygwin; then[m
[32m+[m[32m  [ -n "$JAVA_HOME" ] &&[m
[32m+[m[32m    JAVA_HOME=$(cygpath --path --windows "$JAVA_HOME")[m
[32m+[m[32m  [ -n "$CLASSPATH" ] &&[m
[32m+[m[32m    CLASSPATH=$(cygpath --path --windows "$CLASSPATH")[m
[32m+[m[32m  [ -n "$MAVEN_PROJECTBASEDIR" ] &&[m
[32m+[m[32m    MAVEN_PROJECTBASEDIR=$(cygpath --path --windows "$MAVEN_PROJECTBASEDIR")[m
[32m+[m[32mfi[m
[32m+[m
[32m+[m[32m# Provide a "standardized" way to retrieve the CLI args that will[m
[32m+[m[32m# work with both Windows and non-Windows executions.[m
[32m+[m[32mMAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $*"[m
[32m+[m[32mexport MAVEN_CMD_LINE_ARGS[m
[32m+[m
[32m+[m[32mWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain[m
[32m+[m
[32m+[m[32m# shellcheck disable=SC2086 # safe args[m
[32m+[m[32mexec "$JAVACMD" \[m
[32m+[m[32m  $MAVEN_OPTS \[m
[32m+[m[32m  $MAVEN_DEBUG_OPTS \[m
[32m+[m[32m  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \[m
[32m+[m[32m  "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \[m
[32m+[m[32m  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/mvnw.cmd b/jiu-sys-monitor-dubbo/sys-monitor/mvnw.cmd[m
[1mnew file mode 100644[m
[1mindex 0000000..95ba6f5[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/mvnw.cmd[m
[36m@@ -0,0 +1,205 @@[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Licensed to the Apache Software Foundation (ASF) under one[m
[32m+[m[32m@REM or more contributor license agreements.  See the NOTICE file[m
[32m+[m[32m@REM distributed with this work for additional information[m
[32m+[m[32m@REM regarding copyright ownership.  The ASF licenses this file[m
[32m+[m[32m@REM to you under the Apache License, Version 2.0 (the[m
[32m+[m[32m@REM "License"); you may not use this file except in compliance[m
[32m+[m[32m@REM with the License.  You may obtain a copy of the License at[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM    https://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Unless required by applicable law or agreed to in writing,[m
[32m+[m[32m@REM software distributed under the License is distributed on an[m
[32m+[m[32m@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[32m+[m[32m@REM KIND, either express or implied.  See the License for the[m
[32m+[m[32m@REM specific language governing permissions and limitations[m
[32m+[m[32m@REM under the License.[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m[32m@REM Apache Maven Wrapper startup batch script, version 3.2.0[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Required ENV vars:[m
[32m+[m[32m@REM JAVA_HOME - location of a JDK home dir[m
[32m+[m[32m@REM[m
[32m+[m[32m@REM Optional ENV vars[m
[32m+[m[32m@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands[m
[32m+[m[32m@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending[m
[32m+[m[32m@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven[m
[32m+[m[32m@REM     e.g. to debug Maven itself, use[m
[32m+[m[32m@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000[m
[32m+[m[32m@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files[m
[32m+[m[32m@REM ----------------------------------------------------------------------------[m
[32m+[m
[32m+[m[32m@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'[m
[32m+[m[32m@echo off[m
[32m+[m[32m@REM set title of command window[m
[32m+[m[32mtitle %0[m
[32m+[m[32m@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'[m
[32m+[m[32m@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%[m
[32m+[m
[32m+[m[32m@REM set %HOME% to equivalent of $HOME[m
[32m+[m[32mif "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")[m
[32m+[m
[32m+[m[32m@REM Execute a user defined script before this one[m
[32m+[m[32mif not "%MAVEN_SKIP_RC%" == "" goto skipRcPre[m
[32m+[m[32m@REM check for pre script, once with legacy .bat ending and once with .cmd ending[m
[32m+[m[32mif exist "%USERPROFILE%\mavenrc_pre.bat" call "%USERPROFILE%\mavenrc_pre.bat" %*[m
[32m+[m[32mif exist "%USERPROFILE%\mavenrc_pre.cmd" call "%USERPROFILE%\mavenrc_pre.cmd" %*[m
[32m+[m[32m:skipRcPre[m
[32m+[m
[32m+[m[32m@setlocal[m
[32m+[m
[32m+[m[32mset ERROR_CODE=0[m
[32m+[m
[32m+[m[32m@REM To isolate internal variables from possible post scripts, we use another setlocal[m
[32m+[m[32m@setlocal[m
[32m+[m
[32m+[m[32m@REM ==== START VALIDATION ====[m
[32m+[m[32mif not "%JAVA_HOME%" == "" goto OkJHome[m
[32m+[m
[32m+[m[32mecho.[m
[32m+[m[32mecho Error: JAVA_HOME not found in your environment. >&2[m
[32m+[m[32mecho Please set the JAVA_HOME variable in your environment to match the >&2[m
[32m+[m[32mecho location of your Java installation. >&2[m
[32m+[m[32mecho.[m
[32m+[m[32mgoto error[m
[32m+[m
[32m+[m[32m:OkJHome[m
[32m+[m[32mif exist "%JAVA_HOME%\bin\java.exe" goto init[m
[32m+[m
[32m+[m[32mecho.[m
[32m+[m[32mecho Error: JAVA_HOME is set to an invalid directory. >&2[m
[32m+[m[32mecho JAVA_HOME = "%JAVA_HOME%" >&2[m
[32m+[m[32mecho Please set the JAVA_HOME variable in your environment to match the >&2[m
[32m+[m[32mecho location of your Java installation. >&2[m
[32m+[m[32mecho.[m
[32m+[m[32mgoto error[m
[32m+[m
[32m+[m[32m@REM ==== END VALIDATION ====[m
[32m+[m
[32m+[m[32m:init[m
[32m+[m
[32m+[m[32m@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".[m
[32m+[m[32m@REM Fallback to current working directory if not found.[m
[32m+[m
[32m+[m[32mset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%[m
[32m+[m[32mIF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir[m
[32m+[m
[32m+[m[32mset EXEC_DIR=%CD%[m
[32m+[m[32mset WDIR=%EXEC_DIR%[m
[32m+[m[32m:findBaseDir[m
[32m+[m[32mIF EXIST "%WDIR%"\.mvn goto baseDirFound[m
[32m+[m[32mcd ..[m
[32m+[m[32mIF "%WDIR%"=="%CD%" goto baseDirNotFound[m
[32m+[m[32mset WDIR=%CD%[m
[32m+[m[32mgoto findBaseDir[m
[32m+[m
[32m+[m[32m:baseDirFound[m
[32m+[m[32mset MAVEN_PROJECTBASEDIR=%WDIR%[m
[32m+[m[32mcd "%EXEC_DIR%"[m
[32m+[m[32mgoto endDetectBaseDir[m
[32m+[m
[32m+[m[32m:baseDirNotFound[m
[32m+[m[32mset MAVEN_PROJECTBASEDIR=%EXEC_DIR%[m
[32m+[m[32mcd "%EXEC_DIR%"[m
[32m+[m
[32m+[m[32m:endDetectBaseDir[m
[32m+[m
[32m+[m[32mIF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig[m
[32m+[m
[32m+[m[32m@setlocal EnableExtensions EnableDelayedExpansion[m
[32m+[m[32mfor /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a[m
[32m+[m[32m@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%[m
[32m+[m
[32m+[m[32m:endReadAdditionalConfig[m
[32m+[m
[32m+[m[32mSET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"[m
[32m+[m[32mset WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"[m
[32m+[m[32mset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain[m
[32m+[m
[32m+[m[32mset WRAPPER_URL="https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar"[m
[32m+[m
[32m+[m[32mFOR /F "usebackq tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO ([m
[32m+[m[32m    IF "%%A"=="wrapperUrl" SET WRAPPER_URL=%%B[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32m@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central[m
[32m+[m[32m@REM This allows using the maven wrapper in projects that prohibit checking in binary data.[m
[32m+[m[32mif exist %WRAPPER_JAR% ([m
[32m+[m[32m    if "%MVNW_VERBOSE%" == "true" ([m
[32m+[m[32m        echo Found %WRAPPER_JAR%[m
[32m+[m[32m    )[m
[32m+[m[32m) else ([m
[32m+[m[32m    if not "%MVNW_REPOURL%" == "" ([m
[32m+[m[32m        SET WRAPPER_URL="%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar"[m
[32m+[m[32m    )[m
[32m+[m[32m    if "%MVNW_VERBOSE%" == "true" ([m
[32m+[m[32m        echo Couldn't find %WRAPPER_JAR%, downloading it ...[m
[32m+[m[32m        echo Downloading from: %WRAPPER_URL%[m
[32m+[m[32m    )[m
[32m+[m
[32m+[m[32m    powershell -Command "&{"^[m
[32m+[m		[32m"$webclient = new-object System.Net.WebClient;"^[m
[32m+[m		[32m"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {"^[m
[32m+[m		[32m"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');"^[m
[32m+[m		[32m"}"^[m
[32m+[m		[32m"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%WRAPPER_URL%', '%WRAPPER_JAR%')"^[m
[32m+[m		[32m"}"[m
[32m+[m[32m    if "%MVNW_VERBOSE%" == "true" ([m
[32m+[m[32m        echo Finished downloading %WRAPPER_JAR%[m
[32m+[m[32m    )[m
[32m+[m[32m)[m
[32m+[m[32m@REM End of extension[m
[32m+[m
[32m+[m[32m@REM If specified, validate the SHA-256 sum of the Maven wrapper jar file[m
[32m+[m[32mSET WRAPPER_SHA_256_SUM=""[m
[32m+[m[32mFOR /F "usebackq tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO ([m
[32m+[m[32m    IF "%%A"=="wrapperSha256Sum" SET WRAPPER_SHA_256_SUM=%%B[m
[32m+[m[32m)[m
[32m+[m[32mIF NOT %WRAPPER_SHA_256_SUM%=="" ([m
[32m+[m[32m    powershell -Command "&{"^[m
[32m+[m[32m       "$hash = (Get-FileHash \"%WRAPPER_JAR%\" -Algorithm SHA256).Hash.ToLower();"^[m
[32m+[m[32m       "If('%WRAPPER_SHA_256_SUM%' -ne $hash){"^[m
[32m+[m[32m       "  Write-Output 'Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.';"^[m
[32m+[m[32m       "  Write-Output 'Investigate or delete %WRAPPER_JAR% to attempt a clean download.';"^[m
[32m+[m[32m       "  Write-Output 'If you updated your Maven version, you need to update the specified wrapperSha256Sum property.';"^[m
[32m+[m[32m       "  exit 1;"^[m
[32m+[m[32m       "}"^[m
[32m+[m[32m       "}"[m
[32m+[m[32m    if ERRORLEVEL 1 goto error[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32m@REM Provide a "standardized" way to retrieve the CLI args that will[m
[32m+[m[32m@REM work with both Windows and non-Windows executions.[m
[32m+[m[32mset MAVEN_CMD_LINE_ARGS=%*[m
[32m+[m
[32m+[m[32m%MAVEN_JAVA_EXE% ^[m
[32m+[m[32m  %JVM_CONFIG_MAVEN_PROPS% ^[m
[32m+[m[32m  %MAVEN_OPTS% ^[m
[32m+[m[32m  %MAVEN_DEBUG_OPTS% ^[m
[32m+[m[32m  -classpath %WRAPPER_JAR% ^[m
[32m+[m[32m  "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" ^[m
[32m+[m[32m  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*[m
[32m+[m[32mif ERRORLEVEL 1 goto error[m
[32m+[m[32mgoto end[m
[32m+[m
[32m+[m[32m:error[m
[32m+[m[32mset ERROR_CODE=1[m
[32m+[m
[32m+[m[32m:end[m
[32m+[m[32m@endlocal & set ERROR_CODE=%ERROR_CODE%[m
[32m+[m
[32m+[m[32mif not "%MAVEN_SKIP_RC%"=="" goto skipRcPost[m
[32m+[m[32m@REM check for post script, once with legacy .bat ending and once with .cmd ending[m
[32m+[m[32mif exist "%USERPROFILE%\mavenrc_post.bat" call "%USERPROFILE%\mavenrc_post.bat"[m
[32m+[m[32mif exist "%USERPROFILE%\mavenrc_post.cmd" call "%USERPROFILE%\mavenrc_post.cmd"[m
[32m+[m[32m:skipRcPost[m
[32m+[m
[32m+[m[32m@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'[m
[32m+[m[32mif "%MAVEN_BATCH_PAUSE%"=="on" pause[m
[32m+[m
[32m+[m[32mif "%MAVEN_TERMINATE_CMD%"=="on" exit %ERROR_CODE%[m
[32m+[m
[32m+[m[32mcmd /C exit /B %ERROR_CODE%[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/pom.xml b/jiu-sys-monitor-dubbo/sys-monitor/pom.xml[m
[1mnew file mode 100644[m
[1mindex 0000000..4317e93[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/pom.xml[m
[36m@@ -0,0 +1,115 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"[m
[32m+[m[32m    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">[m
[32m+[m[32m    <modelVersion>4.0.0</modelVersion>[m
[32m+[m[32m    <groupId>com.jiuth</groupId>[m
[32m+[m[32m    <artifactId>sys-monitor</artifactId>[m
[32m+[m[32m    <version>0.0.1-SNAPSHOT</version>[m
[32m+[m[32m    <name>sys-monitor</name>[m
[32m+[m[32m    <description>Demo project for Apache Dubbo</description>[m
[32m+[m[32m    <properties>[m
[32m+[m[32m        <java.version>21</java.version>[m
[32m+[m[32m        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>[m
[32m+[m[32m        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>[m
[32m+[m[32m        <dubbo.version>3.2.10</dubbo.version>[m
[32m+[m[32m        <spring-boot.version>3.1.2</spring-boot.version>[m
[32m+[m[32m    </properties>[m
[32m+[m[32m    <dependencies>[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m            <artifactId>spring-boot-starter-web</artifactId>[m
[32m+[m[32m        </dependency>[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>org.apache.dubbo</groupId>[m
[32m+[m[32m            <artifactId>dubbo-dependencies-zookeeper</artifactId>[m
[32m+[m[32m            <type>pom</type>[m
[32m+[m[32m        </dependency>[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>org.apache.dubbo</groupId>[m
[32m+[m[32m            <artifactId>dubbo-spring-boot-starter</artifactId>[m
[32m+[m[32m        </dependency>[m
[32m+[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>com.mysql</groupId>[m
[32m+[m[32m            <artifactId>mysql-connector-j</artifactId>[m
[32m+[m[32m            <scope>runtime</scope>[m
[32m+[m[32m        </dependency>[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m            <artifactId>spring-boot-starter-test</artifactId>[m
[32m+[m[32m            <scope>test</scope>[m
[32m+[m[32m        </dependency>[m
[32m+[m[32m    </dependencies>[m
[32m+[m[32m    <dependencyManagement>[m
[32m+[m[32m        <dependencies>[m
[32m+[m[32m            <dependency>[m
[32m+[m[32m                <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m                <artifactId>spring-boot-dependencies</artifactId>[m
[32m+[m[32m                <version>${spring-boot.version}</version>[m
[32m+[m[32m                <type>pom</type>[m
[32m+[m[32m                <scope>import</scope>[m
[32m+[m[32m            </dependency>[m
[32m+[m[32m            <dependency>[m
[32m+[m[32m                <groupId>org.apache.dubbo</groupId>[m
[32m+[m[32m                <artifactId>dubbo-bom</artifactId>[m
[32m+[m[32m                <version>${dubbo.version}</version>[m
[32m+[m[32m                <type>pom</type>[m
[32m+[m[32m                <scope>import</scope>[m
[32m+[m[32m            </dependency>[m
[32m+[m[32m            <dependency>[m
[32m+[m[32m                <groupId>org.apache.dubbo</groupId>[m
[32m+[m[32m                <artifactId>dubbo-dependencies-zookeeper</artifactId>[m
[32m+[m[32m                <version>${dubbo.version}</version>[m
[32m+[m[32m                <type>pom</type>[m
[32m+[m[32m                <scope>import</scope>[m
[32m+[m[32m            </dependency>[m
[32m+[m
[32m+[m[32m            <!-- https://mvnrepository.com/artifact/org.apache.zookeeper/zookeeper -->[m
[32m+[m[32m            <dependency>[m
[32m+[m[32m                <groupId>org.apache.zookeeper</groupId>[m
[32m+[m[32m                <artifactId>zookeeper</artifactId>[m
[32m+[m[32m                <version>3.9.2</version>[m
[32m+[m[32m            </dependency>[m
[32m+[m[32m            <!-- https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java -->[m
[32m+[m[32m            <dependency>[m
[32m+[m[32m                <groupId>com.google.protobuf</groupId>[m
[32m+[m[32m                <artifactId>protobuf-java</artifactId>[m
[32m+[m[32m                <version>4.27.1</version>[m
[32m+[m[32m            </dependency>[m
[32m+[m
[32m+[m
[32m+[m[32m        </dependencies>[m
[32m+[m[32m    </dependencyManagement>[m
[32m+[m
[32m+[m[32m    <build>[m
[32m+[m[32m        <plugins>[m
[32m+[m[32m            <plugin>[m
[32m+[m[32m                <groupId>org.apache.maven.plugins</groupId>[m
[32m+[m[32m                <artifactId>maven-compiler-plugin</artifactId>[m
[32m+[m[32m                <version>3.8.1</version>[m
[32m+[m[32m                <configuration>[m
[32m+[m[32m                    <source>17</source>[m
[32m+[m[32m                    <target>17</target>[m
[32m+[m[32m                    <encoding>UTF-8</encoding>[m
[32m+[m[32m                </configuration>[m
[32m+[m[32m            </plugin>[m
[32m+[m[32m            <plugin>[m
[32m+[m[32m                <groupId>org.springframework.boot</groupId>[m
[32m+[m[32m                <artifactId>spring-boot-maven-plugin</artifactId>[m
[32m+[m[32m                <version>${spring-boot.version}</version>[m
[32m+[m[32m                <configuration>[m
[32m+[m[32m                    <mainClass>com.jiuth.sysmonitor.SysMonitorApplication</mainClass>[m
[32m+[m[32m                </configuration>[m
[32m+[m[32m                <executions>[m
[32m+[m[32m                    <execution>[m
[32m+[m[32m                        <id>repackage</id>[m
[32m+[m[32m                        <goals>[m
[32m+[m[32m                            <goal>repackage</goal>[m
[32m+[m[32m                        </goals>[m
[32m+[m[32m                    </execution>[m
[32m+[m[32m                </executions>[m
[32m+[m[32m            </plugin>[m
[32m+[m[32m        </plugins>[m
[32m+[m[32m    </build>[m
[32m+[m
[32m+[m[32m</project>[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/SysMonitorApplication.java b/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/SysMonitorApplication.java[m
[1mnew file mode 100644[m
[1mindex 0000000..edb00fe[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/SysMonitorApplication.java[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mpackage com.jiuth.sysmonitor;[m
[32m+[m
[32m+[m[32mimport org.apache.dubbo.config.spring.context.annotation.EnableDubbo;[m
[32m+[m[32mimport org.springframework.boot.SpringApplication;[m
[32m+[m[32mimport org.springframework.boot.autoconfigure.SpringBootApplication;[m
[32m+[m
[32m+[m[32m@SpringBootApplication[m
[32m+[m[32m@EnableDubbo[m
[32m+[m[32mpublic class SysMonitorApplication {[m
[32m+[m
[32m+[m[32m    public static void main(String[] args) {[m
[32m+[m[32m        SpringApplication.run(SysMonitorApplication.class, args);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/demos/web/BasicController.java b/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/demos/web/BasicController.java[m
[1mnew file mode 100644[m
[1mindex 0000000..8854aca[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/demos/web/BasicController.java[m
[36m@@ -0,0 +1,67 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright 2013-2018 the original author or authors.[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      https://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.jiuth.sysmonitor.demos.web;[m
[32m+[m
[32m+[m[32mimport org.springframework.stereotype.Controller;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ModelAttribute;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestParam;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ResponseBody;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @author <a href="mailto:chenxilzx1@gmail.com">theonefx</a>[m
[32m+[m[32m */[m
[32m+[m[32m@Controller[m
[32m+[m[32mpublic class BasicController {[m
[32m+[m
[32m+[m[32m    // http://127.0.0.1:8080/hello?name=lisi[m
[32m+[m[32m    @RequestMapping("/hello")[m
[32m+[m[32m    @ResponseBody[m
[32m+[m[32m    public String hello(@RequestParam(name = "name", defaultValue = "unknown user") String name) {[m
[32m+[m[32m        return "Hello " + name;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // http://127.0.0.1:8080/user[m
[32m+[m[32m    @RequestMapping("/user")[m
[32m+[m[32m    @ResponseBody[m
[32m+[m[32m    public User user() {[m
[32m+[m[32m        User user = new User();[m
[32m+[m[32m        user.setName("theonefx");[m
[32m+[m[32m        user.setAge(666);[m
[32m+[m[32m        return user;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // http://127.0.0.1:8080/save_user?name=newName&age=11[m
[32m+[m[32m    @RequestMapping("/save_user")[m
[32m+[m[32m    @ResponseBody[m
[32m+[m[32m    public String saveUser(User u) {[m
[32m+[m[32m        return "user will save: name=" + u.getName() + ", age=" + u.getAge();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // http://127.0.0.1:8080/html[m
[32m+[m[32m    @RequestMapping("/html")[m
[32m+[m[32m    public String html(){[m
[32m+[m[32m        return "index.html";[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    @ModelAttribute[m
[32m+[m[32m    public void parseUser(@RequestParam(name = "name", defaultValue = "unknown user") String name[m
[32m+[m[32m            , @RequestParam(name = "age", defaultValue = "12") Integer age, User user) {[m
[32m+[m[32m        user.setName("zhangsan");[m
[32m+[m[32m        user.setAge(18);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/demos/web/PathVariableController.java b/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/demos/web/PathVariableController.java[m
[1mnew file mode 100644[m
[1mindex 0000000..05af7da[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/demos/web/PathVariableController.java[m
[36m@@ -0,0 +1,44 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright 2013-2018 the original author or authors.[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      https://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.jiuth.sysmonitor.demos.web;[m
[32m+[m
[32m+[m[32mimport org.springframework.stereotype.Controller;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.PathVariable;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestMapping;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.RequestMethod;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ResponseBody;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @author <a href="mailto:chenxilzx1@gmail.com">theonefx</a>[m
[32m+[m[32m */[m
[32m+[m[32m@Controller[m
[32m+[m[32mpublic class PathVariableController {[m
[32m+[m
[32m+[m[32m    // http://127.0.0.1:8080/user/123/roles/222[m
[32m+[m[32m    @RequestMapping(value = "/user/{userId}/roles/{roleId}", method = RequestMethod.GET)[m
[32m+[m[32m    @ResponseBody[m
[32m+[m[32m    public String getLogin(@PathVariable("userId") String userId, @PathVariable("roleId") String roleId) {[m
[32m+[m[32m        return "User Id : " + userId + " Role Id : " + roleId;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // http://127.0.0.1:8080/javabeat/somewords[m
[32m+[m[32m    @RequestMapping(value = "/javabeat/{regexp1:[a-z-]+}", method = RequestMethod.GET)[m
[32m+[m[32m    @ResponseBody[m
[32m+[m[32m    public String getRegExp(@PathVariable("regexp1") String regexp1) {[m
[32m+[m[32m        return "URI Part : " + regexp1;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/demos/web/User.java b/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/demos/web/User.java[m
[1mnew file mode 100644[m
[1mindex 0000000..5eb80f5[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/demos/web/User.java[m
[36m@@ -0,0 +1,43 @@[m
[32m+[m[32m/*[m
[32m+[m[32m * Copyright 2013-2018 the original author or authors.[m
[32m+[m[32m *[m
[32m+[m[32m * Licensed under the Apache License, Version 2.0 (the "License");[m
[32m+[m[32m * you may not use this file except in compliance with the License.[m
[32m+[m[32m * You may obtain a copy of the License at[m
[32m+[m[32m *[m
[32m+[m[32m *      https://www.apache.org/licenses/LICENSE-2.0[m
[32m+[m[32m *[m
[32m+[m[32m * Unless required by applicable law or agreed to in writing, software[m
[32m+[m[32m * distributed under the License is distributed on an "AS IS" BASIS,[m
[32m+[m[32m * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[32m+[m[32m * See the License for the specific language governing permissions and[m
[32m+[m[32m * limitations under the License.[m
[32m+[m[32m */[m
[32m+[m
[32m+[m[32mpackage com.jiuth.sysmonitor.demos.web;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * @author <a href="mailto:chenxilzx1@gmail.com">theonefx</a>[m
[32m+[m[32m */[m
[32m+[m[32mpublic class User {[m
[32m+[m
[32m+[m[32m    private String name;[m
[32m+[m
[32m+[m[32m    private Integer age;[m
[32m+[m
[32m+[m[32m    public String getName() {[m
[32m+[m[32m        return name;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setName(String name) {[m
[32m+[m[32m        this.name = name;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public Integer getAge() {[m
[32m+[m[32m        return age;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setAge(Integer age) {[m
[32m+[m[32m        this.age = age;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/dubbo/api/DemoService.java b/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/dubbo/api/DemoService.java[m
[1mnew file mode 100644[m
[1mindex 0000000..a2ad942[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/dubbo/api/DemoService.java[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mpackage com.jiuth.sysmonitor.dubbo.api;[m
[32m+[m
[32m+[m[32mpublic interface DemoService {[m
[32m+[m
[32m+[m[32m    String sayHello(String name);[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/dubbo/consumer/Consumer.java b/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/dubbo/consumer/Consumer.java[m
[1mnew file mode 100644[m
[1mindex 0000000..c4c5a69[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/dubbo/consumer/Consumer.java[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mpackage com.jiuth.sysmonitor.dubbo.consumer;[m
[32m+[m
[32m+[m[32mimport com.jiuth.sysmonitor.dubbo.api.DemoService;[m
[32m+[m
[32m+[m[32mimport org.apache.dubbo.config.annotation.DubboReference;[m
[32m+[m
[32m+[m[32mimport org.springframework.boot.CommandLineRunner;[m
[32m+[m[32mimport org.springframework.stereotype.Component;[m
[32m+[m
[32m+[m[32m@Component[m
[32m+[m[32mpublic class Consumer implements CommandLineRunner {[m
[32m+[m[32m    @DubboReference[m
[32m+[m[32m    private DemoService demoService;[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public void run(String... args) throws Exception {[m
[32m+[m
[32m+[m[32m        String result = demoService.sayHello("world");[m
[32m+[m[32m        System.out.println("Receive result ======> " + result);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/dubbo/service/DemoServiceImpl.java b/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/dubbo/service/DemoServiceImpl.java[m
[1mnew file mode 100644[m
[1mindex 0000000..82cb204[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/src/main/java/com/jiuth/sysmonitor/dubbo/service/DemoServiceImpl.java[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32mpackage com.jiuth.sysmonitor.dubbo.service;[m
[32m+[m
[32m+[m[32mimport com.jiuth.sysmonitor.dubbo.api.DemoService;[m
[32m+[m
[32m+[m[32mimport org.apache.dubbo.config.annotation.DubboService;[m
[32m+[m
[32m+[m[32m@DubboService[m
[32m+[m[32mpublic class DemoServiceImpl implements DemoService {[m
[32m+[m
[32m+[m[32m    @Override[m
[32m+[m[32m    public String sayHello(String name) {[m
[32m+[m[32m        return "Hello " + name;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/src/main/resources/application.yml b/jiu-sys-monitor-dubbo/sys-monitor/src/main/resources/application.yml[m
[1mnew file mode 100644[m
[1mindex 0000000..b8253d8[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/src/main/resources/application.yml[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mspring:[m
[32m+[m[32m  datasource:[m
[32m+[m[32m    driver-class-name: com.mysql.cj.jdbc.Driver[m
[32m+[m[32m    name: defaultDataSource[m
[32m+[m[32m    url: jdbc:mysql://localhost:3306/blue?serverTimezone=UTC[m
[32m+[m[32m    username: 'root'[m
[32m+[m[32m    password: '123456'[m
[32m+[m[32mdubbo:[m
[32m+[m[32m  application:[m
[32m+[m[32m    logger: slf4j[m
[32m+[m[32m    name: SysMonitorApplication[m
[32m+[m[32m  registry:[m
[32m+[m[32m    address: zookeeper://${zookeeper.address:127.0.0.1}:2181[m
[32m+[m[32m  protocol:[m
[32m+[m[32m    name: tri[m
[32m+[m[32m    port: 50051[m
[32m+[m[32mserver:[m
[32m+[m[32m  port: 8080[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/src/main/resources/log4j.properties b/jiu-sys-monitor-dubbo/sys-monitor/src/main/resources/log4j.properties[m
[1mnew file mode 100644[m
[1mindex 0000000..441217c[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/src/main/resources/log4j.properties[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32m###set log levels###[m
[32m+[m[32mlog4j.rootLogger=info, stdout[m
[32m+[m[32m###output to the console###[m
[32m+[m[32mlog4j.appender.stdout=org.apache.log4j.ConsoleAppender[m
[32m+[m[32mlog4j.appender.stdout.Target=System.out[m
[32m+[m[32mlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout[m
[32m+[m[32mlog4j.appender.stdout.layout.ConversionPattern=[%d{hh:mm:ss:sss}] %5p %c{2}: %m%n[m
[32m+[m[32mlog4j.logger.org.apache.zookeeper=warn[m
[32m+[m[32mlog4j.logger.org.apache.dubbo.registry.zookeeper=warn[m
[32m+[m[32mlog4j.logger.org.apache.dubbo.config.deploy=warn[m
[32m+[m[32mlog4j.logger.org.apache.dubbo.registry.client=warn[m
[32m+[m[32mlog4j.logger.org.apache.dubbo.rpc.model=warn[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/src/main/resources/static/index.html b/jiu-sys-monitor-dubbo/sys-monitor/src/main/resources/static/index.html[m
[1mnew file mode 100644[m
[1mindex 0000000..e2d94a2[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/src/main/resources/static/index.html[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32m<html>[m
[32m+[m[32m    <body>[m
[32m+[m[32m        <h1>hello word!!!</h1>[m
[32m+[m[32m        <p>this is a html page</p>[m
[32m+[m[32m    </body>[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/jiu-sys-monitor-dubbo/sys-monitor/src/test/java/com/jiuth/sysmonitor/SysMonitorApplicationTests.java b/jiu-sys-monitor-dubbo/sys-monitor/src/test/java/com/jiuth/sysmonitor/SysMonitorApplicationTests.java[m
[1mnew file mode 100644[m
[1mindex 0000000..deb8867[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor-dubbo/sys-monitor/src/test/java/com/jiuth/sysmonitor/SysMonitorApplicationTests.java[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mpackage com.jiuth.sysmonitor;[m
[32m+[m
[32m+[m[32mimport org.junit.jupiter.api.Test;[m
[32m+[m[32mimport org.springframework.boot.test.context.SpringBootTest;[m
[32m+[m
[32m+[m[32m@SpringBootTest[m
[32m+[m[32mclass SysMonitorApplicationTests {[m
[32m+[m
[32m+[m[32m    @Test[m
[32m+[m[32m    void contextLoads() {[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/jiu-sys-monitor/sys-monitor-capture/pom.xml b/jiu-sys-monitor/sys-monitor-capture/pom.xml[m
[1mindex c573dc9..a7badd9 100644[m
[1m--- a/jiu-sys-monitor/sys-monitor-capture/pom.xml[m
[1m+++ b/jiu-sys-monitor/sys-monitor-capture/pom.xml[m
[36m@@ -43,6 +43,11 @@[m
             <groupId>org.springframework</groupId>[m
             <artifactId>spring-web</artifactId>[m
         </dependency>[m
[32m+[m[32m        <dependency>[m
[32m+[m[32m            <groupId>org.projectlombok</groupId>[m
[32m+[m[32m            <artifactId>lombok</artifactId>[m
[32m+[m[32m            <scope>provided</scope>[m
[32m+[m[32m        </dependency>[m
     </dependencies>[m
 [m
     <build>[m
[1mdiff --git a/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/collector/MemoryUtilizationCollector.java b/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/collector/MemoryUtilizationCollector.java[m
[1mindex d9e017c..6a519e4 100644[m
[1m--- a/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/collector/MemoryUtilizationCollector.java[m
[1m+++ b/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/collector/MemoryUtilizationCollector.java[m
[36m@@ -1,6 +1,9 @@[m
 package com.jiuth.sysmonitorcapture.collector;[m
 [m
 [m
[32m+[m[32mimport lombok.extern.slf4j.Slf4j;[m
[32m+[m[32mimport org.slf4j.Logger;[m
[32m+[m[32mimport org.slf4j.LoggerFactory;[m
 import org.springframework.beans.factory.annotation.Value;[m
 import org.springframework.stereotype.Component;[m
 [m
[36m@@ -8,7 +11,9 @@[m [mimport java.io.BufferedReader;[m
 import java.io.FileReader;[m
 import java.io.IOException;[m
 [m
[32m+[m
 @Component[m
[32m+[m[32m@Slf4j[m
 public class MemoryUtilizationCollector {[m
 [m
     @Value("${meminfo.file.path}")[m
[36m@@ -32,12 +37,12 @@[m [mpublic class MemoryUtilizationCollector {[m
             double memoryUsage = (double) usedMemory / totalMemory * 100;[m
 [m
             // 输出详细的内存信息[m
[31m-            System.out.println("Total Memory: " + totalMemory + " KB");[m
[31m-            System.out.println("Used Memory: " + usedMemory + " KB");[m
[32m+[m[32m            log.info("Total Memory: {} KB", totalMemory);[m
[32m+[m[32m            log.info("Used Memory: {} KB", usedMemory);[m
 [m
             return memoryUsage;[m
         } catch (IOException e) {[m
[31m-            e.printStackTrace();[m
[32m+[m[32m            log.error("读取内存信息文件出错: {}", e.getMessage());[m
             return 0;[m
         }[m
     }[m
[1mdiff --git a/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/collector/MetricCollector.java b/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/collector/MetricCollector.java[m
[1mindex 72255c6..fbeecf3 100644[m
[1m--- a/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/collector/MetricCollector.java[m
[1m+++ b/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/collector/MetricCollector.java[m
[36m@@ -2,16 +2,23 @@[m [mpackage com.jiuth.sysmonitorcapture.collector;[m
 [m
 import com.fasterxml.jackson.core.JsonProcessingException;[m
 import com.fasterxml.jackson.databind.ObjectMapper;[m
[32m+[m[32mimport com.jiuth.sysmonitorcapture.util.IpUtil;[m
 import com.jiuth.sysmonitorcapture.util.OSVersionUtil;[m
[32m+[m[32mimport jakarta.annotation.PostConstruct;[m
[32m+[m[32mimport lombok.extern.slf4j.Slf4j;[m
[32m+[m[32mimport org.slf4j.Logger;[m
[32m+[m[32mimport org.slf4j.LoggerFactory;[m
 import org.springframework.beans.factory.annotation.Value;[m
 import org.springframework.scheduling.annotation.Scheduled;[m
 import org.springframework.stereotype.Component;[m
 import org.springframework.web.client.RestTemplate;[m
 [m
[32m+[m[32mimport javax.lang.model.SourceVersion;[m
 import java.util.HashMap;[m
 import java.util.Map;[m
 [m
 @Component[m
[32m+[m[32m@Slf4j[m
 public class MetricCollector {[m
 [m
     @Value("${server.url}")[m
[36m@@ -20,12 +27,13 @@[m [mpublic class MetricCollector {[m
     @Value("${interval}")[m
     private long interval;[m
 [m
[31m-    private static String endpoint= System.getProperty("user.name", "UnknownUser")+"@"+OSVersionUtil.getLinuxDistribution();;[m
[32m+[m[32m    private String endpoint;[m
 [m
     private final RestTemplate restTemplate;[m
     private final CpuUtilizationCollector cpuUtilizationCollector;[m
     private final MemoryUtilizationCollector memoryUtilizationCollector;[m
 [m
[32m+[m
     public MetricCollector(RestTemplate restTemplate, CpuUtilizationCollector cpuUtilizationCollector,[m
                            MemoryUtilizationCollector memoryUtilizationCollector) {[m
         this.restTemplate = restTemplate;[m
[36m@@ -33,6 +41,15 @@[m [mpublic class MetricCollector {[m
         this.memoryUtilizationCollector = memoryUtilizationCollector;[m
     }[m
 [m
[32m+[m[32m    /**[m
[32m+[m[32m     * 防止依赖注入导致初始化时serverUrl没有值[m
[32m+[m[32m     * 初始化 endpoint[m
[32m+[m[32m     */[m
[32m+[m[32m    @PostConstruct[m
[32m+[m[32m    private void initialize() {[m
[32m+[m[32m        endpoint = initializeEndpoint();[m
[32m+[m[32m    }[m
[32m+[m
     @Scheduled(fixedRateString = "${interval}")[m
     public void captureMetrics() {[m
         double cpuUtilization = cpuUtilizationCollector.getCpuUtilization();[m
[36m@@ -42,27 +59,46 @@[m [mpublic class MetricCollector {[m
         Map<String, Object> cpuMetric = createMetric("cpu.used.percent", cpuUtilization, timestamp);[m
         Map<String, Object> memMetric = createMetric("mem.used.percent", memUtilization, timestamp);[m
 [m
[31m-        // Print detailed CPU and memory information[m
[31m-        System.out.println("CPU Utilization: " + cpuUtilization);[m
[31m-        System.out.println("Memory Utilization: " + memUtilization);[m
[32m+[m[32m        // 打印详细的 CPU 和内存信息[m
[32m+[m[32m        // 打印详细的 CPU 和内存信息[m
[32m+[m[32m        log.info("CPU 使用率: {}", cpuUtilization);[m
[32m+[m[32m        log.info("内存使用率: {}", memUtilization);[m
 [m
[31m-        // Prepare metrics array[m
[32m+[m[32m        // 准备指标数组[m
         Map<String, Object>[] metricsArray = new Map[]{cpuMetric, memMetric};[m
 [m
[31m-        // Convert metrics array to JSON[m
[32m+[m[32m        // 将指标数组转换为 JSON[m
         try {[m
             ObjectMapper mapper = new ObjectMapper();[m
             String json = mapper.writeValueAsString(metricsArray);[m
[31m-            System.out.println("Sending JSON: " + json);[m
[32m+[m[32m            log.info("发送 JSON: {}", json);[m
         } catch (JsonProcessingException e) {[m
[31m-            e.printStackTrace();[m
[32m+[m[32m            log.error("转换 JSON 出错: {}", e.getMessage());[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        // 发送指标到服务器[m
[32m+[m[32m        try {[m
[32m+[m[32m            String response = restTemplate.postForObject(serverUrl, metricsArray, String.class);[m
[32m+[m[32m            log.info("服务器响应 JSON: {}", response);[m
[32m+[m[32m        } catch (Exception e) {[m
[32m+[m[32m            log.error("发送指标到服务器出错: {}", e.getMessage());[m
         }[m
[32m+[m[32m    }[m
 [m
[31m-        // Send metrics to server[m
[31m-        String response = restTemplate.postForObject(serverUrl, metricsArray, String.class);[m
[31m-        System.out.println("Server Response JSON: " + response);[m
[32m+[m[32m    private String initializeEndpoint() {[m
[32m+[m[32m        String username = System.getProperty("user.name", "UnknownUser");[m
[32m+[m[32m        String systemVersion = OSVersionUtil.getSystemVersion();[m
[32m+[m[32m        String ipAddress = null;[m
[32m+[m[32m        if (serverUrl != null && (serverUrl.contains("127.0.0.1") || serverUrl.contains("http://localhost"))) {[m
[32m+[m[32m            ipAddress = "127.0.0.1";[m
[32m+[m[32m        } else {[m
[32m+[m[32m            ipAddress = IpUtil.getLocalIpAddress();[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return username + "@" + systemVersion + "@" + ipAddress;[m
     }[m
 [m
[32m+[m
     private Map<String, Object> createMetric(String metricName, double value, long timestamp) {[m
         Map<String, Object> metric = new HashMap<>();[m
         metric.put("metric", metricName);[m
[1mdiff --git a/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/util/IpUtil.java b/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/util/IpUtil.java[m
[1mindex 4c9e7cd..e6e5189 100644[m
[1m--- a/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/util/IpUtil.java[m
[1m+++ b/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/util/IpUtil.java[m
[36m@@ -26,4 +26,10 @@[m [mpublic class IpUtil {[m
         }[m
         return "Unknown";[m
     }[m
[32m+[m
[32m+[m[32m    public static void main(String[] args) {[m
[32m+[m[32m        String ipAddress = IpUtil.getLocalIpAddress();[m
[32m+[m[32m        System.out.println("Local IP Address: " + ipAddress);[m
[32m+[m
[32m+[m[32m    }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/util/OSVersionUtil.java b/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/util/OSVersionUtil.java[m
[1mindex 2f01692..327b33b 100644[m
[1m--- a/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/util/OSVersionUtil.java[m
[1m+++ b/jiu-sys-monitor/sys-monitor-capture/src/main/java/com/jiuth/sysmonitorcapture/util/OSVersionUtil.java[m
[36m@@ -4,75 +4,37 @@[m [mimport java.io.BufferedReader;[m
 import java.io.IOException;[m
 import java.io.InputStreamReader;[m
 [m
[31m-/**[m
[31m- * 获取Linux发行版信息[m
[31m- * @return 发行版描述信息，如果获取失败则返回"Unknown"[m
[31m- */[m
 public class OSVersionUtil {[m
 [m
[31m-    public static String getLinuxDistribution() {[m
[31m-        String distribution = "Unknown";[m
[31m-        BufferedReader reader = null;[m
[32m+[m[32m    public static String getSystemVersion() {[m
[32m+[m[32m        String version = "Unknown";[m
 [m
         try {[m
[31m-            // 执行lsb_release -d命令获取发行版描述信息[m
[31m-            Process process = Runtime.getRuntime().exec("lsb_release -d");[m
[31m-            reader = new BufferedReader(new InputStreamReader(process.getInputStream()));[m
[32m+[m[32m            Process process = Runtime.getRuntime().exec("lsb_release -a");[m
[32m+[m[32m            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));[m
             String line;[m
 [m
[31m-            // 读取命令输出并提取描述信息[m
             while ((line = reader.readLine()) != null) {[m
                 if (line.startsWith("Description:")) {[m
[31m-                    distribution = line.substring(line.indexOf(':') + 1).trim();[m
[32m+[m[32m                    version = line.substring(line.indexOf(':') + 1).trim();[m
                     break;[m
                 }[m
             }[m
 [m
[31m-            // 等待命令执行完毕[m
             process.waitFor();[m
[32m+[m[32m            reader.close();[m
         } catch (IOException | InterruptedException e) {[m
             e.printStackTrace();[m
[31m-        } finally {[m
[31m-            if (reader != null) {[m
[31m-                try {[m
[31m-                    reader.close();[m
[31m-                } catch (IOException e) {[m
[31m-                    e.printStackTrace();[m
[31m-                }[m
[31m-            }[m
         }[m
 [m
[31m-        return distribution;[m
[31m-    }[m
[31m-[m
[31m-[m
[31m-    /**[m
[31m-     * 获取Linux发行版版本号[m
[31m-     * @return 发行版版本号，如果获取失败则返回"Unknown"[m
[31m-     */[m
[31m-    public static String getLinuxVersion() {[m
[31m-        String version = "Unknown";[m
[31m-        String distributionInfo = getLinuxDistribution();[m
[31m-[m
[31m-        // 从发行版描述信息中提取版本号[m
[31m-        if (!distributionInfo.equals("Unknown")) {[m
[31m-            if (distributionInfo.contains("Ubuntu")) {[m
[31m-                version = distributionInfo.substring(distributionInfo.indexOf(' ') + 1);[m
[31m-            }[m
[31m-            if (distributionInfo.contains("Fedora")) {[m
[31m-                version = distributionInfo.substring(distributionInfo.indexOf(' ') + 1, distributionInfo.lastIndexOf(' '));[m
[31m-            }[m
[31m-            // 可根据需要添加更多发行版的版本提取规则[m
[31m-        }[m
[32m+[m[32m        // 去除版本号中的空格[m
[32m+[m[32m        version = version.replace(" ", "");[m
 [m
         return version;[m
     }[m
 [m
     public static void main(String[] args) {[m
[31m-        String distribution = getLinuxDistribution();[m
[31m-        String version = getLinuxVersion();[m
[31m-[m
[31m-        System.out.println("Linux Distribution: " + distribution);[m
[31m-        System.out.println("Linux Version: " + version);[m
[32m+[m[32m        String version = getSystemVersion();[m
[32m+[m[32m        System.out.println("System Version: " + version);[m
     }[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/jiu-sys-monitor/sys-monitor-capture/src/test/java/com/jiuth/sysmonitorcapture/util/OSVersionUtilTest.java b/jiu-sys-monitor/sys-monitor-capture/src/test/java/com/jiuth/sysmonitorcapture/util/OSVersionUtilTest.java[m
[1mindex 28fdc24..31c786e 100644[m
[1m--- a/jiu-sys-monitor/sys-monitor-capture/src/test/java/com/jiuth/sysmonitorcapture/util/OSVersionUtilTest.java[m
[1m+++ b/jiu-sys-monitor/sys-monitor-capture/src/test/java/com/jiuth/sysmonitorcapture/util/OSVersionUtilTest.java[m
[36m@@ -6,10 +6,8 @@[m [mpublic class OSVersionUtilTest {[m
 [m
     @Test[m
     public void OSVersionUtilTest() {[m
[31m-        String distribution = OSVersionUtil.getLinuxDistribution();[m
[31m-        String version = OSVersionUtil.getLinuxVersion();[m
[32m+[m[32m        String distribution = OSVersionUtil.getSystemVersion();[m
[32m+[m[32m        System.out.println("System Distribution:"+distribution);[m
 [m
[31m-        System.out.println("Linux Distribution: " + distribution);[m
[31m-        System.out.println("Linux Version: " + version);[m
     }[m
 }[m
[1mdiff --git a/jiu-sys-monitor/sys-monitor-server/src/main/java/com/jiuth/sysmonitorserver/config/RedisConfig.java b/jiu-sys-monitor/sys-monitor-server/src/main/java/com/jiuth/sysmonitorserver/config/RedisConfig.java[m
[1mindex 0e04cfb..4022e07 100644[m
[1m--- a/jiu-sys-monitor/sys-monitor-server/src/main/java/com/jiuth/sysmonitorserver/config/RedisConfig.java[m
[1m+++ b/jiu-sys-monitor/sys-monitor-server/src/main/java/com/jiuth/sysmonitorserver/config/RedisConfig.java[m
[36m@@ -23,32 +23,6 @@[m [mpublic class RedisConfig {[m
     @Value("${spring.datasource.password:}")[m
     private String redisPassword;[m
 [m
[31m-//    @Bean[m
[31m-//    JedisConnectionFactory jedisConnectionFactory() {[m
[31m-//[m
[31m-//[m
[31m-//        JedisConnectionFactory jedisConnectionFactory = new JedisConnectionFactory();[m
[31m-//        jedisConnectionFactory.setHostName("localhost"); // Change to your Redis server's hostname[m
[31m-//        jedisConnectionFactory.setPort(6379); // Change to your Redis server's port[m
[31m-//        jedisConnectionFactory.setPassword("123456"); // Set if your Redis server requires authentication[m
[31m-//        jedisConnectionFactory.getPoolConfig().setMaxTotal(50); // Maximum number of connections in the pool[m
[31m-//        jedisConnectionFactory.getPoolConfig().setMaxIdle(10); // Maximum number of idle connections in the pool[m
[31m-//        jedisConnectionFactory.getPoolConfig().setMinIdle(1); // Minimum number of idle connections in the pool[m
[31m-////        jedisConnectionFactory.getPoolConfig().setTestOnBorrow(true); // Test the connection before borrowing from the pool[m
[31m-////        jedisConnectionFactory.getPoolConfig().setTestOnReturn(true); // Test the connection before returning to the pool[m
[31m-////        jedisConnectionFactory.getPoolConfig().setTestWhileIdle(true); // Test idle connections in the pool[m
[31m-//        return jedisConnectionFactory;[m
[31m-//[m
[31m-//    }[m
[31m-//[m
[31m-//    @Bean[m
[31m-//    public RedisTemplate<String, String> redisTemplate() {[m
[31m-//        RedisTemplate<String, String> template = new RedisTemplate<>();[m
[31m-//        template.setConnectionFactory(jedisConnectionFactory());[m
[31m-//        template.setKeySerializer(new StringRedisSerializer());[m
[31m-//        template.setValueSerializer(new StringRedisSerializer());[m
[31m-//        return template;[m
[31m-//    }[m
     @Bean[m
     public JedisConnectionFactory jedisConnectionFactory() {[m
         RedisStandaloneConfiguration redisStandaloneConfiguration = new RedisStandaloneConfiguration();[m
[1mdiff --git a/jiu-sys-monitor/sys-monitor-server/src/main/java/com/jiuth/sysmonitorserver/controller/SysInfoCaptureController.java b/jiu-sys-monitor/sys-monitor-server/src/main/java/com/jiuth/sysmonitorserver/controller/SysInfoCaptureController.java[m
[1mindex 681f204..5293a5d 100644[m
[1m--- a/jiu-sys-monitor/sys-monitor-server/src/main/java/com/jiuth/sysmonitorserver/controller/SysInfoCaptureController.java[m
[1m+++ b/jiu-sys-monitor/sys-monitor-server/src/main/java/com/jiuth/sysmonitorserver/controller/SysInfoCaptureController.java[m
[36m@@ -1,5 +1,122 @@[m
 package com.jiuth.sysmonitorserver.controller;[m
 [m
[32m+[m[32m//import com.jiuth.sysmonitorserver.dao.enity.SysInfoCapture;[m
[32m+[m[32m//import com.jiuth.sysmonitorserver.dto.SysInfoCaptureDTO;[m
[32m+[m[32m//import com.jiuth.sysmonitorserver.service.SysInfoCaptureRedisService;[m
[32m+[m[32m//import com.jiuth.sysmonitorserver.service.SysInfoCaptureService;[m
[32m+[m[32m//import com.jiuth.sysmonitorserver.util.ApiResponse;[m
[32m+[m[32m//import com.jiuth.sysmonitorserver.util.converter.Convert;[m
[32m+[m[32m//import org.springframework.beans.factory.annotation.Autowired;[m
[32m+[m[32m//import org.springframework.web.bind.annotation.*;[m
[32m+[m[32m//[m
[32m+[m[32m//import java.util.ArrayList;[m
[32m+[m[32m//import java.util.HashMap;[m
[32m+[m[32m//import java.util.List;[m
[32m+[m[32m//import java.util.Map;[m
[32m+[m
[32m+[m[32m//@RestController[m
[32m+[m[32m//@RequestMapping("/api/metric")[m
[32m+[m[32m//public class SysInfoCaptureController {[m
[32m+[m[32m//[m
[32m+[m[32m//    @Autowired[m
[32m+[m[32m//    private SysInfoCaptureService sysInfoCaptureService;[m
[32m+[m[32m//[m
[32m+[m[32m//    @Autowired[m
[32m+[m[32m//    private SysInfoCaptureRedisService sysInfoCaptureRedisService;[m
[32m+[m[32m//[m
[32m+[m[32m//    @GetMapping[m
[32m+[m[32m//    public ApiResponse<List<SysInfoCapture>> getAllSysInfo() {[m
[32m+[m[32m//        try {[m
[32m+[m[32m//            List<SysInfoCapture> sysInfoCaptures = sysInfoCaptureService.findAll();[m
[32m+[m[32m//            return ApiResponse.success(sysInfoCaptures);[m
[32m+[m[32m//        } catch (Exception e) {[m
[32m+[m[32m//            return ApiResponse.error(e.getMessage());[m
[32m+[m[32m//        }[m
[32m+[m[32m//    }[m
[32m+[m[32m//[m
[32m+[m[32m//    @PostMapping("/upload")[m
[32m+[m[32m//    public ApiResponse<Void> createSysInfo(@RequestBody List<SysInfoCaptureDTO> sysInfoCaptureDTOs) {[m
[32m+[m[32m//        try {[m
[32m+[m[32m//            List<SysInfoCapture> sysInfoCaptures = Convert.toEntityList(sysInfoCaptureDTOs);[m
[32m+[m[32m////            sysInfoCaptureService.saveAll(sysInfoCaptures);[m
[32m+[m[32m////            return ResponseEntity.ok(ApiResponse.success(null));[m
[32m+[m[32m//[m
[32m+[m[32m//            sysInfoCaptureService.saveAll(sysInfoCaptures);[m
[32m+[m[32m//[m
[32m+[m[32m//            for (SysInfoCaptureDTO dto : sysInfoCaptureDTOs) {[m
[32m+[m[32m//                if ("cpu.used.percent".equals(dto.getMetric())) {[m
[32m+[m[32m//                    sysInfoCaptureRedisService.cacheCpuUsage(dto);[m
[32m+[m[32m//                } else if ("mem.used.percent".equals(dto.getMetric())) {[m
[32m+[m[32m//                    sysInfoCaptureRedisService.cacheMemUsage(dto);[m
[32m+[m[32m//                }[m
[32m+[m[32m//            }[m
[32m+[m[32m//[m
[32m+[m[32m//            return ApiResponse.success(null);[m
[32m+[m[32m//        } catch (Exception e) {[m
[32m+[m[32m//            //TODO 能够返回redis错误信息[m
[32m+[m[32m//            return ApiResponse.error(e.getMessage());[m
[32m+[m[32m//        }[m
[32m+[m[32m//    }[m
[32m+[m[32m//[m
[32m+[m[32m//    @GetMapping("/query")[m
[32m+[m[32m//    public ApiResponse<List<Map<String, Object>>> queryMetrics([m
[32m+[m[32m//            @RequestParam String endpoint,[m
[32m+[m[32m//            @RequestParam(required = false) String metric,[m
[32m+[m[32m//            @RequestParam long start_ts,[m
[32m+[m[32m//            @RequestParam long end_ts[m
[32m+[m[32m//    ) {[m
[32m+[m[32m//[m
[32m+[m[32m//        List<SysInfoCapture> captures = sysInfoCaptureService.query(endpoint, metric, start_ts, end_ts);[m
[32m+[m[32m//        Map<String, List<Map<String, Object>>> result = new HashMap<>();[m
[32m+[m[32m//[m
[32m+[m[32m//        for (SysInfoCapture capture : captures) {[m
[32m+[m[32m//            String metricName = capture.getMetric();[m
[32m+[m[32m//            List<Map<String, Object>> values = result.getOrDefault(metricName, new ArrayList<>());[m
[32m+[m[32m//[m
[32m+[m[32m//            Map<String, Object> data = new HashMap<>();[m
[32m+[m[32m//            data.put("timestamp", capture.getTimestamp());[m
[32m+[m[32m//            data.put("value", capture.getValue());[m
[32m+[m[32m//[m
[32m+[m[32m//            values.add(data);[m
[32m+[m[32m//            result.put(metricName, values);[m
[32m+[m[32m//        }[m
[32m+[m[32m//[m
[32m+[m[32m//        List<Map<String, Object>> response = new ArrayList<>();[m
[32m+[m[32m//        for (Map.Entry<String, List<Map<String, Object>>> entry : result.entrySet()) {[m
[32m+[m[32m//            Map<String, Object> metricData = new HashMap<>();[m
[32m+[m[32m//            metricData.put("metric", entry.getKey());[m
[32m+[m[32m//            metricData.put("values", entry.getValue());[m
[32m+[m[32m//            response.add(metricData);[m
[32m+[m[32m//        }[m
[32m+[m[32m//[m
[32m+[m[32m//        return ApiResponse.success(response);[m
[32m+[m[32m//    }[m
[32m+[m[32m//[m
[32m+[m[32m//    @GetMapping("/{id}")[m
[32m+[m[32m//    public ApiResponse<SysInfoCapture> getSysInfoById(@PathVariable Long id) {[m
[32m+[m[32m//        try {[m
[32m+[m[32m//            SysInfoCapture sysInfoCapture = sysInfoCaptureService.findById(id);[m
[32m+[m[32m//            if (sysInfoCapture != null) {[m
[32m+[m[32m//                return ApiResponse.success(sysInfoCapture);[m
[32m+[m[32m//            } else {[m
[32m+[m[32m//                return ApiResponse.error("Data not found");[m
[32m+[m[32m//            }[m
[32m+[m[32m//        } catch (Exception e) {[m
[32m+[m[32m//            return ApiResponse.error(e.getMessage());[m
[32m+[m[32m//        }[m
[32m+[m[32m//    }[m
[32m+[m[32m//[m
[32m+[m[32m//    @DeleteMapping("/{id}")[m
[32m+[m[32m//    public ApiResponse<Void> deleteSysInfo(@PathVariable Long id) {[m
[32m+[m[32m//        try {[m
[32m+[m[32m//            sysInfoCaptureService.deleteById(id);[m
[32m+[m[32m//            return ApiResponse.success(null);[m
[32m+[m[32m//        } catch (Exception e) {[m
[32m+[m[32m//            return ApiResponse.error(e.getMessage());[m
[32m+[m[32m//        }[m
[32m+[m[32m//    }[m
[32m+[m[32m//}[m
[32m+[m
 import com.jiuth.sysmonitorserver.dao.enity.SysInfoCapture;[m
 import com.jiuth.sysmonitorserver.dto.SysInfoCaptureDTO;[m
 import com.jiuth.sysmonitorserver.service.SysInfoCaptureRedisService;[m
[36m@@ -9,11 +126,14 @@[m [mimport com.jiuth.sysmonitorserver.util.converter.Convert;[m
 import org.springframework.beans.factory.annotation.Autowired;[m
 import org.springframework.web.bind.annotation.*;[m
 [m
[31m-import java.util.ArrayList;[m
[32m+[m[32m        import java.util.ArrayList;[m
 import java.util.HashMap;[m
 import java.util.List;[m
 import java.util.Map;[m
 [m
[32m+[m[32m/**[m
[32m+[m[32m * @author jiuth[m
[32m+[m[32m */[m
 @RestController[m
 @RequestMapping("/api/metric")[m
 public class SysInfoCaptureController {[m
[36m@@ -26,36 +146,24 @@[m [mpublic class SysInfoCaptureController {[m
 [m
     @GetMapping[m
     public ApiResponse<List<SysInfoCapture>> getAllSysInfo() {[m
[31m-        try {[m
[31m-            List<SysInfoCapture> sysInfoCaptures = sysInfoCaptureService.findAll();[m
[31m-            return ApiResponse.success(sysInfoCaptures);[m
[31m-        } catch (Exception e) {[m
[31m-            return ApiResponse.error(e.getMessage());[m
[31m-        }[m
[32m+[m[32m        List<SysInfoCapture> sysInfoCaptures = sysInfoCaptureService.findAll();[m
[32m+[m[32m        return ApiResponse.success(sysInfoCaptures);[m
     }[m
 [m
     @PostMapping("/upload")[m
     public ApiResponse<Void> createSysInfo(@RequestBody List<SysInfoCaptureDTO> sysInfoCaptureDTOs) {[m
[31m-        try {[m
[31m-            List<SysInfoCapture> sysInfoCaptures = Convert.toEntityList(sysInfoCaptureDTOs);[m
[31m-//            sysInfoCaptureService.saveAll(sysInfoCaptures);[m
[31m-//            return ResponseEntity.ok(ApiResponse.success(null));[m
[31m-[m
[31m-            sysInfoCaptureService.saveAll(sysInfoCaptures);[m
[31m-[m
[31m-            for (SysInfoCaptureDTO dto : sysInfoCaptureDTOs) {[m
[31m-                if ("cpu.used.percent".equals(dto.getMetric())) {[m
[31m-                    sysInfoCaptureRedisService.cacheCpuUsage(dto);[m
[31m-                } else if ("mem.used.percent".equals(dto.getMetric())) {[m
[31m-                    sysInfoCaptureRedisService.cacheMemUsage(dto);[m
[31m-                }[m
[32m+[m[32m        List<SysInfoCapture> sysInfoCaptures = Convert.toEntityList(sysInfoCaptureDTOs);[m
[32m+[m[32m        sysInfoCaptureService.saveAll(sysInfoCaptures);[m
[32m+[m
[32m+[m[32m        for (SysInfoCaptureDTO dto : sysInfoCaptureDTOs) {[m
[32m+[m[32m            if ("cpu.used.percent".equals(dto.getMetric())) {[m
[32m+[m[32m                sysInfoCaptureRedisService.cacheCpuUsage(dto);[m
[32m+[m[32m            } else if ("mem.used.percent".equals(dto.getMetric())) {[m
[32m+[m[32m                sysInfoCaptureRedisService.cacheMemUsage(dto);[m
             }[m
[31m-[m
[31m-            return ApiResponse.success(null);[m
[31m-        } catch (Exception e) {[m
[31m-            //TODO 能够返回redis错误信息[m
[31m-            return ApiResponse.error(e.getMessage());[m
         }[m
[32m+[m
[32m+[m[32m        return ApiResponse.success(null);[m
     }[m
 [m
     @GetMapping("/query")[m
[36m@@ -65,7 +173,6 @@[m [mpublic class SysInfoCaptureController {[m
             @RequestParam long start_ts,[m
             @RequestParam long end_ts[m
     ) {[m
[31m-[m
         List<SysInfoCapture> captures = sysInfoCaptureService.query(endpoint, metric, start_ts, end_ts);[m
         Map<String, List<Map<String, Object>>> result = new HashMap<>();[m
 [m
[36m@@ -94,26 +201,18 @@[m [mpublic class SysInfoCaptureController {[m
 [m
     @GetMapping("/{id}")[m
     public ApiResponse<SysInfoCapture> getSysInfoById(@PathVariable Long id) {[m
[31m-        try {[m
[31m-            SysInfoCapture sysInfoCapture = sysInfoCaptureService.findById(id);[m
[31m-            if (sysInfoCapture != null) {[m
[31m-                return ApiResponse.success(sysInfoCapture);[m
[31m-            } else {[m
[31m-                return ApiResponse.error("Data not found");[m
[31m-            }[m
[31m-        } catch (Exception e) {[m
[31m-            return ApiResponse.error(e.getMessage());[m
[32m+[m[32m        SysInfoCapture sysInfoCapture = sysInfoCaptureService.findById(id);[m
[32m+[m[32m        if (sysInfoCapture != null) {[m
[32m+[m[32m            return ApiResponse.success(sysInfoCapture);[m
[32m+[m[32m        } else {[m
[32m+[m[32m            return ApiResponse.error("未找到数据");[m
         }[m
     }[m
 [m
     @DeleteMapping("/{id}")[m
     public ApiResponse<Void> deleteSysInfo(@PathVariable Long id) {[m
[31m-        try {[m
[31m-            sysInfoCaptureService.deleteById(id);[m
[31m-            return ApiResponse.success(null);[m
[31m-        } catch (Exception e) {[m
[31m-            return ApiResponse.error(e.getMessage());[m
[31m-        }[m
[32m+[m[32m        sysInfoCaptureService.deleteById(id);[m
[32m+[m[32m        return ApiResponse.success(null);[m
     }[m
 }[m
 [m
[1mdiff --git a/jiu-sys-monitor/sys-monitor-server/src/main/java/com/jiuth/sysmonitorserver/controller/SysInfoCaptureController.zip b/jiu-sys-monitor/sys-monitor-server/src/main/java/com/jiuth/sysmonitorserver/controller/SysInfoCaptureController.zip[m
[1mnew file mode 100644[m
[1mindex 0000000..9e4fec2[m
Binary files /dev/null and b/jiu-sys-monitor/sys-monitor-server/src/main/java/com/jiuth/sysmonitorserver/controller/SysInfoCaptureController.zip differ
[1mdiff --git a/jiu-sys-monitor/sys-monitor-server/src/main/java/com/jiuth/sysmonitorserver/exception/GlobalExceptionHandler.java b/jiu-sys-monitor/sys-monitor-server/src/main/java/com/jiuth/sysmonitorserver/exception/GlobalExceptionHandler.java[m
[1mnew file mode 100644[m
[1mindex 0000000..6fe8467[m
[1m--- /dev/null[m
[1m+++ b/jiu-sys-monitor/sys-monitor-server/src/main/java/com/jiuth/sysmonitorserver/exception/GlobalExceptionHandler.java[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mpackage com.jiuth.sysmonitorserver.exception;[m
[32m+[m
[32m+[m[32mimport com.jiuth.sysmonitorserver.util.ApiResponse;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ControllerAdvice;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ExceptionHandler;[m
[32m+[m[32mimport org.springframework.web.bind.annotation.ResponseBody;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * 全局异常处理[m
[32m+[m[32m * @author jiuth[m
[32m+[m[32m */[m
[32m+[m[32m@ControllerAdvice[m
[32m+[m[32mpublic class GlobalExceptionHandler {[m
[32m+[m
[32m+[m[32m    @ExceptionHandler(Exception.class)[m
[32m+[m[32m    @ResponseBody[m
[32m+[m[32m    public ApiResponse<Void> handleException(Exception e) {[m
[32m+[m[32m        return ApiResponse.error(e.getMessage());[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
